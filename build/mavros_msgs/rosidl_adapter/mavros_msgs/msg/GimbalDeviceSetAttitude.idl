// generated from rosidl_adapter/resource/msg.idl.em
// with input from mavros_msgs/msg/GimbalDeviceSetAttitude.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Quaternion.idl"

module mavros_msgs {
  module msg {
    module GimbalDeviceSetAttitude_Constants {
      @verbatim (language="comment", text=
        "GIMBAL_DEVICE_FLAGS" "\n"        " Based on GIMBAL_DEVICE_FLAGS_RETRACT")
      const uint16 FLAGS_RETRACT = 1;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_NEUTRAL")
      const uint16 FLAGS_NEUTRAL = 2;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_ROLL_LOCK")
      const uint16 FLAGS_ROLL_LOCK = 4;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_PITCH_LOCK")
      const uint16 FLAGS_PITCH_LOCK = 8;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_YAW_LOCK")
      const uint16 FLAGS_YAW_LOCK = 16;
    };
    @verbatim (language="comment", text=
      "MAVLink message: GIMBAL_DEVICE_SET_ATTITUDE" "\n"
      "https://mavlink.io/en/messages/common.html#GIMBAL_DEVICE_SET_ATTITUDE")
    struct GimbalDeviceSetAttitude {
      @verbatim (language="comment", text=
        "System ID")
      uint8 target_system;

      @verbatim (language="comment", text=
        "Component ID")
      uint8 target_component;

      @verbatim (language="comment", text=
        "Low level gimbal flags (bitwise) - See GIMBAL_DEVICE_FLAGS")
      uint16 flags;

      @verbatim (language="comment", text=
        "Quaternion, x, y, z, w (0 0 0 1 is the null-rotation, the frame is depends on whether the flag GIMBAL_DEVICE_FLAGS_YAW_LOCK is set)")
      geometry_msgs::msg::Quaternion q;

      @verbatim (language="comment", text=
        "X component of angular velocity, positive is rolling to the right, NaN to be ignored.")
      float angular_velocity_x;

      @verbatim (language="comment", text=
        "Y component of angular velocity, positive is pitching up, NaN to be ignored.")
      float angular_velocity_y;

      @verbatim (language="comment", text=
        "Z component of angular velocity, positive is yawing to the right, NaN to be ignored.")
      float angular_velocity_z;
    };
  };
};
