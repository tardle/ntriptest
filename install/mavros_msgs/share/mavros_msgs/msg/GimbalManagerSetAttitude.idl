// generated from rosidl_adapter/resource/msg.idl.em
// with input from mavros_msgs/msg/GimbalManagerSetAttitude.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Quaternion.idl"

module mavros_msgs {
  module msg {
    module GimbalManagerSetAttitude_Constants {
      @verbatim (language="comment", text=
        "GIMBAL_MANAGER_FLAGS" "\n"        " Based on GIMBAL_DEVICE_FLAGS_RETRACT")
      const uint32 GIMBAL_MANAGER_FLAGS_RETRACT = 1;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_NEUTRAL")
      const uint32 GIMBAL_MANAGER_FLAGS_NEUTRAL = 2;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_ROLL_LOCK")
      const uint32 GIMBAL_MANAGER_FLAGS_ROLL_LOCK = 4;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_PITCH_LOCK")
      const uint32 GIMBAL_MANAGER_FLAGS_PITCH_LOCK = 8;
      @verbatim (language="comment", text=
        "Based on GIMBAL_DEVICE_FLAGS_YAW_LOCK")
      const uint32 GIMBAL_MANAGER_FLAGS_YAW_LOCK = 16;
    };
    @verbatim (language="comment", text=
      "MAVLink message: GIMBAL_MANAGER_SET_ATTITUDE" "\n"
      "https://mavlink.io/en/messages/common.html#GIMBAL_MANAGER_SET_ATTITUDE")
    struct GimbalManagerSetAttitude {
      @verbatim (language="comment", text=
        "System ID")
      uint8 target_system;

      @verbatim (language="comment", text=
        "Component ID")
      uint8 target_component;

      @verbatim (language="comment", text=
        "High level gimbal manager flags to use (bitwise) - See GIMBAL_MANAGER_FLAGS")
      uint32 flags;

      @verbatim (language="comment", text=
        "Component ID of gimbal device to address" "\n"
        "(or 1-6 for non-MAVLink gimbal), 0 for all gimbal device" "\n"
        "components. Send command multiple times for more than" "\n"
        "one gimbal (but not all gimbals).  Default Mavlink gimbal" "\n"
        "device ids: 154, 171-175")
      uint8 gimbal_device_id;

      @verbatim (language="comment", text=
        "Quaternion, x, y, z, w (0 0 0 1 is the null-rotation, the frame is depends on whether the flag GIMBAL_DEVICE_FLAGS_YAW_LOCK is set)")
      geometry_msgs::msg::Quaternion q;

      @verbatim (language="comment", text=
        "X component of angular velocity, positive is rolling to the right, NaN to be ignored.")
      float angular_velocity_x;

      @verbatim (language="comment", text=
        "Y component of angular velocity, positive is pitching up, NaN to be ignored.")
      float angular_velocity_y;

      @verbatim (language="comment", text=
        "Z component of angular velocity, positive is yawing to the right, NaN to be ignored.")
      float angular_velocity_z;
    };
  };
};
